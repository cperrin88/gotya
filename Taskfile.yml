version: '3'

vars:
  BIN_DIR: ./bin
  COVER_PROFILE: coverage.out
  LINT_CONFIG: .golangci.yml

env:
  GO111MODULE: on
  CGO_ENABLED: 0

tasks:
  # Build tasks
  build:
    desc: Build the project
    cmds:
      - go build -o {{.BIN_DIR}}/gotya ./cli/gotya

  generate:
    desc: Generate code
    cmds:
      - go generate ./...
    generates:
      - '**/mocks/*.go'

  install:
    desc: Install the application
    cmds:
      - go install ./cli/gotya

  # Test tasks
  test:
    desc: Run all tests
    cmds:
      - go test -short ./... -coverprofile={{.COVER_PROFILE}}

  test-integration:
    desc: Run integration tests
    cmds:
      - go test -tags=integration ./... -coverprofile=integration-{{.COVER_PROFILE}}

  test-all:
    desc: Run all tests including integration tests
    cmds:
      - task: test
      - task: test-integration


  test-cover:
    desc: Run tests and show coverage
    deps:
      - test
    cmds:
      - go tool cover -func={{.COVER_PROFILE}}

  test-cover-html:
    desc: Generate HTML coverage report
    deps:
      - test
    cmds:
      - go tool cover -html={{.COVER_PROFILE}} -o coverage.html

  install-go-mutesting:
    desc: Install go-mutesting
    cmds:
      - go install github.com/avito-tech/go-mutesting/cmd/go-mutesting@latest

  mutate:
    desc: Run mutation testing on the codebase
    deps:
      - install-go-mutesting
    cmds:
      - go-mutesting ./pkg/...

  mutate-verbose:
    desc: Run mutation testing with verbose output
    deps:
      - install-go-mutesting
    cmds:
      - go-mutesting --debug ./pkg/...

  # Lint and format
  lint:
    desc: Run linters
    cmds:
      - golangci-lint run  ./...
      -
  lint-fix:
    desc: Run linters
    cmds:
      - golangci-lint run  ./... --fix

  fmt:
    desc: Format Go code
    cmds:
      - go fmt ./...

  tidy:
    desc: Tidy Go modules
    cmds:
      - go mod tidy

  # Cleanup
  clean:
    desc: Clean build artifacts
    cmds:
      - go clean
      - rm -rf {{.BIN_DIR}} {{.COVER_PROFILE}} coverage.html

  check:
    desc: Run all checks (lint, test)
    deps: [lint, test]
