name: Integration Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  integration-test:
    name: Integration Test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          check-latest: true

      - name: Check out code
        uses: actions/checkout@v4

      - name: Start HTTP server for test repository
        uses: Eun/http-server-action@v1.0.12
        with:
          port: 52221
          directory: ${{ github.workspace }}/test/repo

      - name: Build gotya
        run: |
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            go build -o gotya.exe ./cli/gotya
            echo "GOTYA_BIN=gotya.exe" >> $GITHUB_ENV
          else
            go build -o gotya ./cli/gotya
            echo "GOTYA_BIN=./gotya" >> $GITHUB_ENV
          fi

      - name: Set up test environment
        run: |
          # Create config directory
          mkdir -p "${{ github.workspace }}/.gotya"
          
          # Copy test configuration
          cp test/config.yaml "${{ github.workspace }}/.gotya/config.yaml"
          
          # Set GOTYA_HOME environment variable
          echo "GOTYA_HOME=${{ github.workspace }}/.gotya" >> $GITHUB_ENV
          
          # Add gotya to PATH on Windows
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            echo "${{ github.workspace }};" >> "$GITHUB_PATH"
          else
            echo "${{ github.workspace }}" >> "$GITHUB_PATH"
          fi

      - name: Run integration tests
        run: |
          # Test repository listing
          ${{ env.GOTYA_BIN }} repo list
          
          # Test package search
          ${{ env.GOTYA_BIN }} search test-package
          
          # Test package installation
          ${{ env.GOTYA_BIN }} install test-package
          
          # Verify installation
          ${{ env.GOTYA_BIN }} list --installed | grep test-package
          
          # Test package update
          ${{ env.GOTYA_BIN }} update test-package
          
          # Test package uninstallation
          ${{ env.GOTYA_BIN }} uninstall test-package
          
          # Verify uninstallation
          if ${{ env.GOTYA_BIN }} list --installed | grep -q test-package; then
            echo "Package was not properly uninstalled"
            exit 1
          fi
          
          # Test cache operations
          ${{ env.GOTYA_BIN }} cache clean --all
          
          # Test configuration
          ${{ env.GOTYA_BIN }} config show


